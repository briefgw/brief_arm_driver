// Auto-generated. Do not edit!

// (in-package actionlib.msg)


"use strict";

let _serializer = require('../base_serialize.js');
let _deserializer = require('../base_deserialize.js');
let _finder = require('../find.js');

//-----------------------------------------------------------

class TestRequestGoal {
  constructor() {
    this.terminate_status = 0;
    this.ignore_cancel = false;
    this.result_text = '';
    this.the_result = 0;
    this.is_simple_client = false;
    this.delay_accept = {secs: 0, nsecs: 0};
    this.delay_terminate = {secs: 0, nsecs: 0};
    this.pause_status = {secs: 0, nsecs: 0};
  }

  static serialize(obj, bufferInfo) {
    // Serializes a message object of type TestRequestGoal
    // Serialize message field [terminate_status]
    bufferInfo = _serializer.int32(obj.terminate_status, bufferInfo);
    // Serialize message field [ignore_cancel]
    bufferInfo = _serializer.bool(obj.ignore_cancel, bufferInfo);
    // Serialize message field [result_text]
    bufferInfo = _serializer.string(obj.result_text, bufferInfo);
    // Serialize message field [the_result]
    bufferInfo = _serializer.int32(obj.the_result, bufferInfo);
    // Serialize message field [is_simple_client]
    bufferInfo = _serializer.bool(obj.is_simple_client, bufferInfo);
    // Serialize message field [delay_accept]
    bufferInfo = _serializer.duration(obj.delay_accept, bufferInfo);
    // Serialize message field [delay_terminate]
    bufferInfo = _serializer.duration(obj.delay_terminate, bufferInfo);
    // Serialize message field [pause_status]
    bufferInfo = _serializer.duration(obj.pause_status, bufferInfo);
    return bufferInfo;
  }

  static deserialize(buffer) {
    //deserializes a message object of type TestRequestGoal
    let tmp;
    let len;
    let data = new TestRequestGoal();
    // Deserialize message field [terminate_status]
    tmp = _deserializer.int32(buffer);
    data.terminate_status = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [ignore_cancel]
    tmp = _deserializer.bool(buffer);
    data.ignore_cancel = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [result_text]
    tmp = _deserializer.string(buffer);
    data.result_text = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [the_result]
    tmp = _deserializer.int32(buffer);
    data.the_result = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [is_simple_client]
    tmp = _deserializer.bool(buffer);
    data.is_simple_client = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [delay_accept]
    tmp = _deserializer.duration(buffer);
    data.delay_accept = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [delay_terminate]
    tmp = _deserializer.duration(buffer);
    data.delay_terminate = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [pause_status]
    tmp = _deserializer.duration(buffer);
    data.pause_status = tmp.data;
    buffer = tmp.buffer;
    return {
      data: data,
      buffer: buffer
    }
  }

  static datatype() {
    // Returns string type for a message object
    return 'actionlib/TestRequestGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'db5d00ba98302d6c6dd3737e9a03ceea';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    int32 TERMINATE_SUCCESS = 0
    int32 TERMINATE_ABORTED = 1
    int32 TERMINATE_REJECTED = 2
    int32 TERMINATE_LOSE = 3
    int32 TERMINATE_DROP = 4
    int32 TERMINATE_EXCEPTION = 5
    int32 terminate_status
    bool ignore_cancel  # If true, ignores requests to cancel
    string result_text
    int32 the_result    # Desired value for the_result in the Result
    bool is_simple_client
    duration delay_accept  # Delays accepting the goal by this amount of time
    duration delay_terminate  # Delays terminating for this amount of time
    duration pause_status  # Pauses the status messages for this amount of time
    
    `;
  }

};

// Constants for message
TestRequestGoal.Constants = {
  TERMINATE_SUCCESS: 0,
  TERMINATE_ABORTED: 1,
  TERMINATE_REJECTED: 2,
  TERMINATE_LOSE: 3,
  TERMINATE_DROP: 4,
  TERMINATE_EXCEPTION: 5,
}

module.exports = TestRequestGoal;
