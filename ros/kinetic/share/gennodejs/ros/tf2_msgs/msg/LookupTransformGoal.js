// Auto-generated. Do not edit!

// (in-package tf2_msgs.msg)


"use strict";

let _serializer = require('../base_serialize.js');
let _deserializer = require('../base_deserialize.js');
let _finder = require('../find.js');

//-----------------------------------------------------------

class LookupTransformGoal {
  constructor() {
    this.target_frame = '';
    this.source_frame = '';
    this.source_time = {secs: 0, nsecs: 0};
    this.timeout = {secs: 0, nsecs: 0};
    this.target_time = {secs: 0, nsecs: 0};
    this.fixed_frame = '';
    this.advanced = false;
  }

  static serialize(obj, bufferInfo) {
    // Serializes a message object of type LookupTransformGoal
    // Serialize message field [target_frame]
    bufferInfo = _serializer.string(obj.target_frame, bufferInfo);
    // Serialize message field [source_frame]
    bufferInfo = _serializer.string(obj.source_frame, bufferInfo);
    // Serialize message field [source_time]
    bufferInfo = _serializer.time(obj.source_time, bufferInfo);
    // Serialize message field [timeout]
    bufferInfo = _serializer.duration(obj.timeout, bufferInfo);
    // Serialize message field [target_time]
    bufferInfo = _serializer.time(obj.target_time, bufferInfo);
    // Serialize message field [fixed_frame]
    bufferInfo = _serializer.string(obj.fixed_frame, bufferInfo);
    // Serialize message field [advanced]
    bufferInfo = _serializer.bool(obj.advanced, bufferInfo);
    return bufferInfo;
  }

  static deserialize(buffer) {
    //deserializes a message object of type LookupTransformGoal
    let tmp;
    let len;
    let data = new LookupTransformGoal();
    // Deserialize message field [target_frame]
    tmp = _deserializer.string(buffer);
    data.target_frame = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [source_frame]
    tmp = _deserializer.string(buffer);
    data.source_frame = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [source_time]
    tmp = _deserializer.time(buffer);
    data.source_time = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [timeout]
    tmp = _deserializer.duration(buffer);
    data.timeout = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [target_time]
    tmp = _deserializer.time(buffer);
    data.target_time = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [fixed_frame]
    tmp = _deserializer.string(buffer);
    data.fixed_frame = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [advanced]
    tmp = _deserializer.bool(buffer);
    data.advanced = tmp.data;
    buffer = tmp.buffer;
    return {
      data: data,
      buffer: buffer
    }
  }

  static datatype() {
    // Returns string type for a message object
    return 'tf2_msgs/LookupTransformGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '35e3720468131d675a18bb6f3e5f22f8';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #Simple API
    string target_frame
    string source_frame
    time source_time
    duration timeout
    
    #Advanced API
    time target_time
    string fixed_frame
    
    #Whether or not to use the advanced API
    bool advanced
    
    
    `;
  }

};

module.exports = LookupTransformGoal;
