// Auto-generated. Do not edit!

// (in-package control_msgs.msg)


"use strict";

let _serializer = require('../base_serialize.js');
let _deserializer = require('../base_deserialize.js');
let _finder = require('../find.js');

//-----------------------------------------------------------

class GripperCommandResult {
  constructor() {
    this.position = 0.0;
    this.effort = 0.0;
    this.stalled = false;
    this.reached_goal = false;
  }

  static serialize(obj, bufferInfo) {
    // Serializes a message object of type GripperCommandResult
    // Serialize message field [position]
    bufferInfo = _serializer.float64(obj.position, bufferInfo);
    // Serialize message field [effort]
    bufferInfo = _serializer.float64(obj.effort, bufferInfo);
    // Serialize message field [stalled]
    bufferInfo = _serializer.bool(obj.stalled, bufferInfo);
    // Serialize message field [reached_goal]
    bufferInfo = _serializer.bool(obj.reached_goal, bufferInfo);
    return bufferInfo;
  }

  static deserialize(buffer) {
    //deserializes a message object of type GripperCommandResult
    let tmp;
    let len;
    let data = new GripperCommandResult();
    // Deserialize message field [position]
    tmp = _deserializer.float64(buffer);
    data.position = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [effort]
    tmp = _deserializer.float64(buffer);
    data.effort = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [stalled]
    tmp = _deserializer.bool(buffer);
    data.stalled = tmp.data;
    buffer = tmp.buffer;
    // Deserialize message field [reached_goal]
    tmp = _deserializer.bool(buffer);
    data.reached_goal = tmp.data;
    buffer = tmp.buffer;
    return {
      data: data,
      buffer: buffer
    }
  }

  static datatype() {
    // Returns string type for a message object
    return 'control_msgs/GripperCommandResult';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'e4cbff56d3562bcf113da5a5adeef91f';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    float64 position  # The current gripper gap size (in meters)
    float64 effort    # The current effort exerted (in Newtons)
    bool stalled      # True iff the gripper is exerting max effort and not moving
    bool reached_goal # True iff the gripper position has reached the commanded setpoint
    
    `;
  }

};

module.exports = GripperCommandResult;
