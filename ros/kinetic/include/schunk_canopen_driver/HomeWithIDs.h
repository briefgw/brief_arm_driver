// Generated by gencpp from file schunk_canopen_driver/HomeWithIDs.msg
// DO NOT EDIT!


#ifndef SCHUNK_CANOPEN_DRIVER_MESSAGE_HOMEWITHIDS_H
#define SCHUNK_CANOPEN_DRIVER_MESSAGE_HOMEWITHIDS_H

#include <ros/service_traits.h>


#include <schunk_canopen_driver/HomeWithIDsRequest.h>
#include <schunk_canopen_driver/HomeWithIDsResponse.h>


namespace schunk_canopen_driver
{

struct HomeWithIDs
{

typedef HomeWithIDsRequest Request;
typedef HomeWithIDsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct HomeWithIDs
} // namespace schunk_canopen_driver


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::schunk_canopen_driver::HomeWithIDs > {
  static const char* value()
  {
    return "e91ddea331fe5e8410e22caf0f3b5ddb";
  }

  static const char* value(const ::schunk_canopen_driver::HomeWithIDs&) { return value(); }
};

template<>
struct DataType< ::schunk_canopen_driver::HomeWithIDs > {
  static const char* value()
  {
    return "schunk_canopen_driver/HomeWithIDs";
  }

  static const char* value(const ::schunk_canopen_driver::HomeWithIDs&) { return value(); }
};


// service_traits::MD5Sum< ::schunk_canopen_driver::HomeWithIDsRequest> should match 
// service_traits::MD5Sum< ::schunk_canopen_driver::HomeWithIDs > 
template<>
struct MD5Sum< ::schunk_canopen_driver::HomeWithIDsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::schunk_canopen_driver::HomeWithIDs >::value();
  }
  static const char* value(const ::schunk_canopen_driver::HomeWithIDsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::schunk_canopen_driver::HomeWithIDsRequest> should match 
// service_traits::DataType< ::schunk_canopen_driver::HomeWithIDs > 
template<>
struct DataType< ::schunk_canopen_driver::HomeWithIDsRequest>
{
  static const char* value()
  {
    return DataType< ::schunk_canopen_driver::HomeWithIDs >::value();
  }
  static const char* value(const ::schunk_canopen_driver::HomeWithIDsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::schunk_canopen_driver::HomeWithIDsResponse> should match 
// service_traits::MD5Sum< ::schunk_canopen_driver::HomeWithIDs > 
template<>
struct MD5Sum< ::schunk_canopen_driver::HomeWithIDsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::schunk_canopen_driver::HomeWithIDs >::value();
  }
  static const char* value(const ::schunk_canopen_driver::HomeWithIDsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::schunk_canopen_driver::HomeWithIDsResponse> should match 
// service_traits::DataType< ::schunk_canopen_driver::HomeWithIDs > 
template<>
struct DataType< ::schunk_canopen_driver::HomeWithIDsResponse>
{
  static const char* value()
  {
    return DataType< ::schunk_canopen_driver::HomeWithIDs >::value();
  }
  static const char* value(const ::schunk_canopen_driver::HomeWithIDsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SCHUNK_CANOPEN_DRIVER_MESSAGE_HOMEWITHIDS_H
